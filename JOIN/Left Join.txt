С помощью LEFT JOIN объедините таблицы user_actions и users по ключу user_id. 
Обратите внимание на порядок таблиц — слева users_actions, справа users. 
В результат включите две колонки с user_id из обеих таблиц. 
Эти две колонки назовите соответственно user_id_left и user_id_right. 
Также в результат включите колонки order_id, time, action, sex, birth_date. 
Отсортируйте получившуюся таблицу по возрастанию id пользователя (в колонке из левой таблицы).
Поля в результирующей таблице: user_id_left, user_id_right,  order_id, time, action, sex, birth_date

SELECT user_actions.user_id as user_id_left,
       users.user_id as user_id_right,
       order_id,
       time,
       action,
       sex,
       birth_date
FROM   user_actions
    LEFT JOIN users using(user_id)
ORDER BY user_actions.user_id ;

-------------------------------------------------------------------------------------
Gосчитайте количество уникальных id в колонке user_id, пришедшей из левой таблицы user_actions. 
Выведите это количество в качестве результата. 
Колонку с посчитанным значением назовите users_count.
Поле в результирующей таблице: users_count

SELECT count(distinct user_actions.user_id) as users_count
FROM   user_actions
    LEFT JOIN users using(user_id) ;

--------------------------------------------------------------------------------------
Добавьте к запросу оператор WHERE и исключите NULL значения в колонке user_id из правой таблицы. 
Включите в результат все те же колонки и отсортируйте получившуюся таблицу по возрастанию id пользователя в колонке из левой таблицы.
Поля в результирующей таблице: user_id_left, user_id_right,  order_id, time, action, sex, birth_date

SELECT user_actions.user_id as user_id_left,
       users.user_id as user_id_right,
       order_id,
       time,
       action,
       sex,
       birth_date
FROM   user_actions
    LEFT JOIN users using(user_id)
WHERE  users.user_id is not null
ORDER BY user_actions.user_id ;