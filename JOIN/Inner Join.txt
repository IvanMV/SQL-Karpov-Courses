Объедините таблицы user_actions и users по ключу user_id. В результат включите две колонки с user_id из обеих таблиц. 
Эти две колонки назовите соответственно user_id_left и user_id_right. 
Также в результат включите колонки order_id, time, action, sex, birth_date. 
Отсортируйте получившуюся таблицу по возрастанию id пользователя (в любой из двух колонок с id).
Поля в результирующей таблице: user_id_left, user_id_right,  order_id, time, action, sex, birth_date

SELECT a.user_id as user_id_left,
       b.user_id as user_id_right,
       a.order_id,
       a.time,
       a.action,
       b.sex,
       b.birth_date
FROM   user_actions as a join users as b
        ON a.user_id = b.user_id
ORDER BY user_id_left ;

------------------------------------------------------------------------
Посчитать количество уникальных id в объединённой таблице. 
В этот раз просто посчитайте уникальные user_id в одной из колонок с id. 
Выведите это количество в качестве результата. 
Колонку с посчитанным значением назовите users_count.
Поле в результирующей таблице: users_count

SELECT count(distinct user_id) as users_count
FROM   users join user_actions using(user_id) ;

------------------------------------------------------------------------
