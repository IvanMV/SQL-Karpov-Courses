Примените оконные функции к таблице products и с помощью ранжирующих функций упорядочьте все товары по цене — от самых дорогих к самым дешёвым. 
Добавьте в таблицу следующие колонки:
Колонку product_number с порядковым номером товара (функция ROW_NUMBER).
Колонку product_rank с рангом товара с пропусками рангов (функция RANK).
Колонку product_dense_rank с рангом товара без пропусков рангов (функция DENSE_RANK).
Поля в результирующей таблице: product_id, name, price, product_number, product_rank, product_dense_rank

SELECT 
    product_id, 
    name, 
    price, 
    ROW_NUMBER() OVER(ORDER BY price DESC) AS product_number, 
    RANK() OVER(ORDER BY price DESC) AS product_rank, 
    DENSE_RANK() OVER(ORDER BY price DESC) AS product_dense_rank
FROM products ;

---------------------------------------------------------------------------------------------------------
Примените оконную функцию к таблице products и с помощью агрегирующей функции в отдельной колонке для каждой записи проставьте цену самого дорогого товара. 
Колонку с этим значением назовите max_price. 
Затем для каждого товара посчитайте долю его цены в стоимости самого дорогого товара — просто поделите одну колонку на другую. 
Полученные доли округлите до двух знаков после запятой. 
Колонку с долями назовите share_of_max.
Выведите всю информацию о товарах, включая значения в новых колонках. 
Результат отсортируйте сначала по убыванию цены товара, затем по возрастанию id товара.
Поля в результирующей таблице: product_id, name, price, max_price, share_of_max

SELECT
    product_id,
    name, 
    price,
    MAX(price) OVER() AS max_price,
    ROUND(price / MAX(price) OVER(), 2) AS share_of_max
FROM products
ORDER BY price DESC, product_id ;